name: GitHub action

on:
  pull_request:
    types:
      - closed

env:
  HOST: ${{ secrets.HOST }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Configure MySQL
      run: |
        sudo service mysql start
        sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_NAME }};"
        sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "CREATE USER IF NOT EXISTS ${{ secrets.DB_USER }}@'localhost' IDENTIFIED BY '${{ secrets.DB_USER_PASSWORD }}';"
        sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "GRANT ALL PRIVILEGES ON ${{ secrets.DB_NAME }}.* TO ${{ secrets.DB_USER }}@'localhost';"
        sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "FLUSH PRIVILEGES;"

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Create virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate
        
    - name: Install dependencies and run integration tests
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt 
        export DB_USER=${{ secrets.DB_USER }}
        export DB_PASSWORD=${{ secrets.DB_USER_PASSWORD }}
        export DB_NAME=${{ secrets.DB_NAME }}
        python main.py &
        sleep 15
        python tests/integration.py

  gcloud:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v2
      with: 
        credentials_json: ${{ secrets.GOOGLE_CONFIG }}
      env: 
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_CONFIG }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Use gcloud CLI
      run: 'gcloud info'

    - name: Build Artifact
      run: |
        zip -r webapp.zip .

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: webapp
        path: ./webapp.zip
        
    - name: Set up Packer
      uses: hashicorp/setup-packer@main
      with:
        version: latest

    - name: build image
      run: |
        sudo packer init .
        sudo packer build .
