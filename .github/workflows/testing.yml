name: create instance template CI

on: [pull_request]

jobs:
  build:
    name: Creating Machine Image
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      PACKER_GITHUB_API_TOKEN: ${{secrets.PACKER_GITHUB_API_TOKEN}}
      MACHINE_TYPE: e2-medium
      TAGS: webapp
      IMAGE: csye6225-2024-04-03-19-05-10
      BOOT_DISK_SIZE: 100GB
      BOOT_DISK_TYPE: pd-balanced
      NETWORK: vpc
      SUBNET: webapp
      NETWORK_TIER: PREMIUM
      SERVICE_ACCOUNT: vm-service-account@tf-gcp-infra-002207381.iam.gserviceaccount.com
      SCOPES: "https://www.googleapis.com/auth/cloud-platform"
      DB_USER: cloudsql_user
      DB_PASSWORD: rPUFlJ9r7uRn9AYQ
      DB_HOST: 10.228.0.2
      DB_NAME: cloudsql_database
      REGION: us-east1
      GROUP_NAME: webapp-instance-group-manager

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
          create_credentials_file: true
          export_environment_variables: true

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: 'Generating Template Name with Current Timestamp'
        id: generate-timestamp
        run: |
          echo "TEMPLATE_NAME=csye6225-vm-$(date +%Y-%m-%d-%H-%M-%S)" >> $GITHUB_ENV

      - name: 'Creating instance template'
        run: |
          gcloud compute instance-templates create $TEMPLATE_NAME \
            --machine-type=${{ env.MACHINE_TYPE }} \
            --tags=${{ env.TAGS }} \
            --image=${{ env.IMAGE }} \
            --region=${{ env.REGION }} \
            --instance-template-region=${{ env.REGION }} \
            --boot-disk-size=${{ env.BOOT_DISK_SIZE }} \
            --boot-disk-type=${{ env.BOOT_DISK_TYPE }} \
            --network-interface="network=${{ env.NETWORK }},subnet=${{ env.SUBNET }},network-tier=${{ env.NETWORK_TIER }}" \
            --service-account=${{ env.SERVICE_ACCOUNT }} \
            --scopes=${{ env.SCOPES }} \
            --metadata=startup-script="#! /bin/bash echo 'DB_USER=$DB_USER' >> /opt/webapp/.env && echo 'DB_PASSWORD=$DB_PASSWORD' >> /opt/webapp/.env && echo 'DB_NAME=$DB_NAME' >> /opt/webapp/.env && echo 'DB_INSTANCE_NAME=$DB_INSTANCE_CONNECTION_NAME' >> /opt/webapp/.env && echo 'DB_HOST=\"$DB_PRIVATE_IP\"' >> /opt/webapp/.env && echo 'PROJECT_ID=\"$PROJECT_ID\"' >> /opt/webapp/.env"
      - name: 'Configure MIG to use new template'
        run: |
          gcloud compute instance-groups managed set-instance-template \
           ${{ env.GROUP_NAME }} \
            --template=projects/${{ env.GCLOUD_PROJECT }}/regions/${{ env.REGION }}/instanceTemplates/${{ env.TEMPLATE_NAME }} \
            --region=${{ env.REGION }}

      - name: 'Start rolling update'
        run: |
          gcloud compute instance-groups managed rolling-action start-update ${{ env.GROUP_NAME }} \
            --version=template=projects/${{ env.GCLOUD_PROJECT }}/regions/${{ env.REGION }}/instanceTemplates/${{ env.TEMPLATE_NAME }} \
            --region=${{ env.REGION }} \
            --type=proactive

      - name: 'Check rolling update'
        run: |
          gcloud compute instance-groups managed wait-until ${{ env.GROUP_NAME }} \
          --version-target-reached \
            --region=${{env.REGION}}